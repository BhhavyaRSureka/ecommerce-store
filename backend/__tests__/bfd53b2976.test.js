// ********RoostGPT********
/*
Test generated by RoostGPT for test NodeTesting using AI Type Open AI and AI Model gpt-4-1106-preview

ROOST_METHOD_HASH=57665a017e
ROOST_METHOD_SIG_HASH=bfd53b2976


*/

// ********RoostGPT********
const express = require("express");
const request = require("supertest");
const app = require("../app"); // Adjusting the path according to the project structure

describe("CORS Middleware", () => {
  // Before each test case, we are starting the app on a random port
  let server;
  beforeEach((done) => {
    server = app.listen(0, done);
  });

  // After each test case, we are closing the server
  afterEach((done) => {
    server.close(done);
  });

  test("should allow cross-origin requests", async () => {
    const response = await request(server)
      .get("/") // Using an arbitrary route to test CORS headers
      .expect("Access-Control-Allow-Origin", "*");
    expect(response.headers["access-control-allow-origin"]).toBe("*");
  });

  test("should allow all headers", async () => {
    const response = await request(server)
      .get("/")
      .expect("Access-Control-Allow-Headers", "*"); // Header key should be 'Access-Control-Allow-Headers' not 'Access-Control-Allow-Header'
    expect(response.headers["access-control-allow-headers"]).toBe("*"); // Header key should be in lowercase, use 'toBe' instead of 'toEqual' for string comparison
  });

  // You can add more tests here if needed for additional methods (POST, PUT, DELETE, etc.)
});

