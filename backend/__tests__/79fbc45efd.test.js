// ********RoostGPT********
/*
Test generated by RoostGPT for test NodeMochaTest using AI Type Open AI and AI Model gpt-4-1106-preview


ROOST_TEST_HASH=ad824a76d3

*/

// ********RoostGPT********
const express = require("express");
const request = require("supertest");

// Import app from the relative path to the test directory
const app = require("../app");

// Test suite for the app.get("*") method
describe("app.get('*') method", () => {

  // Set up necessary preconditions
  beforeAll(() => {
    // Any global setup can go here
  });

  // Clean-up tasks
  afterAll(() => {
    // Any global teardown can go here
  });

  // Test case for successful response
  test("should serve index.html on any non-api route", async () => {
    const response = await request(app).get("/some-random-route");
    expect(response.statusCode).toBe(200);
    expect(response.type).toBe("text/html"); // Assuming "index.html" is an HTML file
  });

  // Test case for non-existent file
  test("should serve index.html even if the file does not exist in the given route", async () => {
    const response = await request(app).get("/non-existent-file");
    expect(response.statusCode).toBe(200);
    expect(response.type).toBe("text/html"); // Assuming "index.html" is an HTML file
  });

  // Test case for catch-all handler
  test("should always serve index.html regardless of the route", async () => {
    const randomRoute = "/" + Math.random().toString(36).substring(7);
    const response = await request(app).get(randomRoute);
    expect(response.statusCode).toBe(200);
    expect(response.type).toBe("text/html"); // Assuming "index.html" is an HTML file
  });

});

